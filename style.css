*,
*::after,
*::before {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}
body {
  font-family: Roboto, Poppins, Raleway, -apple-system, BlinkMacSystemFont,
    "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue",
    sans-serif;
  display: grid;
  place-items: center;
  height: 100vh;
  width: 100vw;
}

.container {
  position: relative;
}

.container button {
  padding: 20px 40px;
  font-size: 20px;
  /* background-color: royalblue; */
  border: none;
  border-radius: 8px;
  box-shadow: 2px 2px 5px -3px #000000, -2px -2px 5px -3px #000000;
  text-transform: capitalize;
  cursor: pointer;
  font-weight: 600;
  transition: all ease 1s ease;
  /* color: #ffffff; */
}
/*
Buttons receive focus and thus we can use that power 
to trigger descendants and also affect their behavior
*/
button:focus {
  background-color: #1258c8;
}
.drop-down-content {
  display: none;
  position: absolute;
  top: calc(100% + 2px);
  background-color: #ffffff;
  width: 100%;
  left: 0%;
  border-radius: 8px;
  border: 0.4px solid #000000;
}

.drop-down-content ul {
  list-style: none;
}
.drop-down-content ul li {
  width: 100%;
  padding: 10px;
}
.drop-down-content ul li:hover {
  background-color: #1258c8;
}
/*
Use focus within as when you click on child element 
on plain focus it loses focus and if it was to perform 
some naviagtion it would not work
*/

button:focus-within .drop-down-content{
    display: block;
}
